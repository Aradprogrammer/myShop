// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_store_bugeto.Persistence.Contexts;

namespace asp_store_bugeto.Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220731173428_AddRequestPay")]
    partial class AddRequestPay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Carts.CartItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CartID")
                        .HasColumnType("bigint");

                    b.Property<int>("CountItem")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartID");

                    b.HasIndex("ProductID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Carts.Carts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BrowserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Commons.Temp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temps");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(618),
                            IsRemoved = false,
                            Key = "Img_Path_Product",
                            Value = "Images/ProductImage/"
                        },
                        new
                        {
                            Id = 2L,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(1330),
                            IsRemoved = false,
                            Key = "Img_Path_HomePage",
                            Value = "Images/HomePageImage/"
                        });
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Emails.Email", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("SenderEmailId")
                        .HasColumnType("bigint");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SenderEmailId");

                    b.HasIndex("Subject")
                        .IsUnique()
                        .HasFilter("[Subject] IS NOT NULL");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            SenderEmailId = 1L,
                            Subject = "بازیابی گذرواژه",
                            Text = "<a href= $Link >بازیابی گذرواژه</a>",
                            Titel = "بازیابی گذرواژه",
                            URL = "Authentication/resetpassword"
                        },
                        new
                        {
                            Id = 2L,
                            SenderEmailId = 1L,
                            Subject = "تایید ایمیل",
                            Text = "<a href= $Link >تایید ایمیل</a>",
                            Titel = "تایید ایمیل",
                            URL = "Authentication/verifyemail"
                        });
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Emails.SenderEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressEmail")
                        .IsUnique()
                        .HasFilter("[AddressEmail] IS NOT NULL");

                    b.ToTable("SenderEmails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressEmail = "test@email.com",
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 504, DateTimeKind.Local).AddTicks(7152),
                            IsRemoved = false,
                            Password = "1111"
                        });
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Emails.SentEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SendingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SentEmails");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Finances.RequestPay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Authority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<bool>("isPay")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("RequestPays");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.HomePage.PicAndLink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Src")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PicsAndLinks");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.HomePage.SliderCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CategorySliderLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountItem")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SlidersCategory");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategorySliderLocation = "Slider1",
                            CountItem = 6,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(2035),
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 2L,
                            CategorySliderLocation = "Slider2",
                            CountItem = 6,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(3564),
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 3L,
                            CategorySliderLocation = "Slider3",
                            CountItem = 6,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(3603),
                            IsRemoved = false
                        },
                        new
                        {
                            Id = 4L,
                            CategorySliderLocation = "Slider4",
                            CountItem = 6,
                            InsertTime = new DateTime(2022, 7, 31, 10, 34, 27, 505, DateTimeKind.Local).AddTicks(3627),
                            IsRemoved = false
                        });
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllStarsScore")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Displayed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PopularCount")
                        .HasColumnType("bigint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StarsCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("VisitCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.ProductFeatures", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatures");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.ProductImages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Src")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 10L,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "Operator"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.UserInRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInRoles");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.UserPopular", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Removetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersPopulars");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Carts.CartItem", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Carts.Carts", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Carts.Carts", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Emails.Email", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Emails.SenderEmail", "SenderEmail")
                        .WithMany("Emails")
                        .HasForeignKey("SenderEmailId");

                    b.Navigation("SenderEmail");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Finances.RequestPay", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.HomePage.SliderCategory", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Category", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Product", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.ProductFeatures", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Product", "Product")
                        .WithMany("ProductFeature")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.ProductImages", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.UserInRole", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Users.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_store_bugeto.Domain.Entities.Users.User", "User")
                        .WithMany("UserInRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.UserPopular", b =>
                {
                    b.HasOne("asp_store_bugeto.Domain.Entities.Products.Product", "Product")
                        .WithMany("UserPopular")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_store_bugeto.Domain.Entities.Users.User", "User")
                        .WithMany("UserPopular")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Carts.Carts", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Emails.SenderEmail", b =>
                {
                    b.Navigation("Emails");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Products.Product", b =>
                {
                    b.Navigation("ProductFeature");

                    b.Navigation("ProductImages");

                    b.Navigation("UserPopular");
                });

            modelBuilder.Entity("asp_store_bugeto.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("UserInRoles");

                    b.Navigation("UserPopular");
                });
#pragma warning restore 612, 618
        }
    }
}
